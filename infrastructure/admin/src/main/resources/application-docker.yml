# Docker环境配置 - 精简版
# 最小化本地配置，所有业务配置从Nacos加载
# 使用方式: java -jar admin-service.jar --spring.profiles.active=docker
server:
  port: 8888
  # 解决网络连接问题
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 20000
    keep-alive-timeout: 15000

spring:
  application:
    name: admin-service

  # WebClient超时配置 - 解决首次访问失败
  webflux:
    timeout: 30s

  # 从Nacos加载完整配置（可选）
  config:
    import: optional:nacos:admin-service.yml

  # Docker环境基本安全配置
  security:
    user:
      name: ${SPRING_SECURITY_USER_NAME:admin}
      password: ${SPRING_SECURITY_USER_PASSWORD:admin123}

  boot:
    admin:
      ui:
        title: HavenButler Admin Console
        brand: HavenButler管理控制台
      # 配置外部访问URL，避免使用Docker内部IP
      context-path: /
      # 确保前端使用正确的基础URL
      instance-auth:
        enabled: false
      # 配置实例代理
      instance-proxy:
        ignored-headers: "Cookie,Set-Cookie"
      # 解决首次加载失败问题
      discovery:
        ignored-services: []
        converter:
          management-context-path: /actuator

  # Nacos配置 - Docker环境（对齐文档规范）
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_ADDR:nacos:8848}
        namespace: ${NACOS_NAMESPACE:havenbutler-dev}  # 改为 havenbutler-dev
        group: ${NACOS_GROUP:infrastructure-services}  # 改为 infrastructure-services
        enabled: true
      config:
        server-addr: ${NACOS_ADDR:nacos:8848}
        namespace: ${NACOS_NAMESPACE:havenbutler-dev}  # 改为 havenbutler-dev
        group: ${NACOS_GROUP:infrastructure-services}  # 改为 infrastructure-services
        file-extension: yml
        enabled: true
        shared-configs:
          - data-id: havenbutler-common.yml
            group: infrastructure-services  # 改为 infrastructure-services
            refresh: true
        extension-configs:
          - data-id: admin-service-${ENVIRONMENT:docker}.yml
            group: infrastructure-services  # 改为 infrastructure-services
            refresh: true

# Admin 服务自定义配置
admin:
  # 是否允许远程关闭服务（默认禁用，需要通过容器编排管理）
  allowRemoteShutdown: false

# 日志配置 - 减少连接错误噪音
logging:
  level:
    root: INFO
    com.haven.admin: DEBUG
    # 降低网络连接错误日志级别
    reactor.netty.http.client.HttpClientConnect: ERROR
    org.springframework.web.reactive.function.client: ERROR
    # Spring Boot Admin相关日志
    de.codecentric.boot.admin: INFO
    # 保持我们的业务日志为DEBUG便于调试
    com.haven.admin.monitor: INFO
    com.haven.admin.service: DEBUG

# SpringDoc OpenAPI 配置（生产环境关闭）
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Actuator 与监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized  # 仅授权用户可查看详情
  metrics:
    export:
      prometheus:
        enabled: true
