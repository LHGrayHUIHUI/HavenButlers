# Storage Service Docker环境配置
server:
  port: 8081

spring:
  application:
    name: storage-service

  # Docker环境禁用Nacos，使用本地配置
  config:
    import: optional:nacos:storage-service.yml
  cloud:
    nacos:
      config:
        enabled: false
      discovery:
        enabled: false

  # 数据源配置 - Docker环境
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRESQL_HOST:postgres}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DB:storage_db}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:password}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000

  # MongoDB配置
  data:
    mongodb:
      host: ${MONGODB_HOST:mongodb}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DB:storage_db}
      username: ${MONGODB_USER:admin}
      password: ${MONGODB_PASSWORD:password}
      authentication-database: admin

  # Redis配置
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:password}
    timeout: 5000ms
    database: 0
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false

# MinIO配置
minio:
  endpoint: ${MINIO_ENDPOINT:http://minio:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin}
  bucket: ${MINIO_BUCKET:storage_db}
  console:
    endpoint: ${MINIO_CONSOLE_ENDPOINT:http://minio:9001}

# 存储配置
storage:
  file:
    storage-type: minio
  service:
    url: http://storage-service:8081

# 统一日志系统配置
haven:
  logging:
    enabled: true
    async: true
    aspect:
      enabled: true

# Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,logs
  endpoint:
    health:
      show-details: always

# 日志配置
logging:
  level:
    com.haven.storage: INFO
    com.haven.base: INFO
    org.springframework.data: WARN
    org.hibernate.SQL: WARN
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{traceId}] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] [%X{traceId}] %-5level %logger{36} - %msg%n"