# Storage Service 配置 - 支持本地和Nacos环境
server:
  port: 8081

spring:
  application:
    name: storage-service

  # Nacos配置 - 支持环境变量控制
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_ADDR:localhost:8848}
        namespace: ${NACOS_NAMESPACE:public}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        enabled: ${NACOS_ENABLED:false}
        service: ${spring.application.name}
        metadata:
          management.context-path: /actuator
          version: 1.0.0
          zone: storage
          environment: ${ENVIRONMENT:dev}
      config:
        server-addr: ${NACOS_ADDR:localhost:8848}
        namespace: ${NACOS_NAMESPACE:public}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        file-extension: yml
        enabled: ${NACOS_ENABLED:false}

  # 数据源配置 - 本地默认配置，支持环境变量覆盖
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRESQL_HOST:localhost}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DB:storage_db}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:password}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000

  # MongoDB配置
  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DB:storage_db}
      username: ${MONGODB_USER:admin}
      password: ${MONGODB_PASSWORD:password}
      authentication-database: admin

  # Redis配置 - 本地使用密码认证
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:redis123}
    timeout: 5000ms
    database: 0
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true

# MinIO配置 - 本地默认配置，支持环境变量覆盖
minio:
  endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin}
  bucket: ${MINIO_BUCKET:storage_db}
  console:
    endpoint: ${MINIO_CONSOLE_ENDPOINT:http://localhost:9001}

# 存储配置
storage:
  file:
    storage-type: minio
  service:
    url: http://localhost:8081

# 统一日志系统配置
haven:
  logging:
    enabled: true
    async: true
    aspect:
      enabled: true

# Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,logs
  endpoint:
    health:
      show-details: always

# 日志配置
logging:
  level:
    com.haven.storage: DEBUG
    com.haven.base: DEBUG
    org.springframework.data: INFO
    root: INFO
base-model:
  trace:
    exclude-paths: "/**"  # 通配符表示所有路径都无需认证
  security:
    jwt-secret: fJmSbo7pBY8teyzVDyv7YxW1aXPKHSx0uFWxsomMJ4I=
