server:
  port: 8080

spring:
  application:
    name: gateway-service

  cloud:
    # 网关配置
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      # 全局默认过滤器
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
        - AddRequestHeader=X-Request-From, Gateway

      # 路由配置
      routes:
        # 账户服务路由
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/api/v1/account/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200

        # 存储服务路由
        - id: storage-service
          uri: lb://storage-service
          predicates:
            - Path=/api/v1/storage/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: storage-service
                fallbackUri: forward:/fallback/storage

        # 消息服务路由
        - id: message-service
          uri: lb://message-service
          predicates:
            - Path=/api/v1/message/**
          filters:
            - StripPrefix=2

        # AI服务路由
        - id: ai-service
          uri: lb://ai-service
          predicates:
            - Path=/api/v1/ai/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20

        # NLP服务路由
        - id: nlp-service
          uri: lb://nlp-service
          predicates:
            - Path=/api/v1/nlp/**
          filters:
            - StripPrefix=2

        # 文件管理服务路由
        - id: file-manager-service
          uri: lb://file-manager-service
          predicates:
            - Path=/api/v1/file/**
          filters:
            - StripPrefix=2
            - name: RequestSize
              args:
                maxSize: 10MB

    # Nacos配置
    nacos:
      discovery:
        server-addr: ${NACOS_ADDR:localhost:8848}
        namespace: ${NACOS_NAMESPACE:public}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
      config:
        server-addr: ${NACOS_ADDR:localhost:8848}
        namespace: ${NACOS_NAMESPACE:public}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        file-extension: yaml

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

# 集成infrastructure配置
base:
  exception:
    enabled: true
  trace:
    enabled: true

common:
  redis:
    enabled: true
    key-prefix: "gateway:"
  security:
    jwt-enabled: true
    jwt-secret: ${JWT_SECRET:HavenButlerSecretKeyForJWTGenerationAndValidation2025}

# 熔断器配置
resilience4j:
  circuitbreaker:
    instances:
      storage-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

# 限流配置
redis-rate-limiter:
  replenishRate: 100  # 每秒允许请求数
  burstCapacity: 200  # 突发容量

# Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# 日志配置
logging:
  level:
    com.haven: DEBUG
    org.springframework.cloud.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"